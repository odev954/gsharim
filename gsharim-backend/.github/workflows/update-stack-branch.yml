---
name: Updating Branch Stack (Hotswap Deploy)

on:
    pull_request:
        branches:
            - dev
        types:
            - synchronize
        paths:
            - "cdk.json"
            - "**/cdk.json"
            - "**/Dockerfile"
            - "package.json"
            - "package-lock.json"
            - "**/package.json"
            - "**/package-lock.json"
            - "**/nest-cli.json"
            - "**/tconfig.json"
            - "**/tconfig.build.json"
            - "**.ts"
            - "**/jest-e2e.json"
            - "**/jest.config.json"
            - "!README.md"
            - "!**/README.md"
            - "!**/.prettierrc"
            - "!**/.eslintrc.js"
            - "!**ignore"
            - "!node_modules/**"
            - "!.github/**"
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest
        permissions:
            pull-requests: write
            actions: write
            contents: read
            id-token: write
        environment:
            name: development (PR)
            url: ${{ steps.extract-url.outputs.API_GATEWAY_URL }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 16
            - name: configure credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  role-to-assume: ${{ secrets.ROLE_ARN }}
                  aws-region: eu-west-1

            - name: fomatting stack name
              id: format-stack-name
              uses: frabert/replace-string-action@v2
              with:
                  pattern: "[^A-Za-z0-9-]"
                  flags: "g"
                  string: GsharimBackendStack-${{ github.head_ref || github.ref_name }}
                  replace-with: "-"

            - name: installing dependencies
              run: |
                  npm ci
                  npm i -g aws-cdk

            - name: synth
              run: cdk synth
              env:
                  VPC_ID: ${{ vars.VPC_ID }}
                  RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
                  RDS_USERNAME: ${{ secrets.RDS_USERNAME }}

            - name: deploy
              run: cdk deploy --hotswap --require-approval never --context stackName=${{ steps.format-stack-name.outputs.replaced }}
              env:
                  VPC_ID: ${{ vars.VPC_ID }}
                  RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
                  RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
